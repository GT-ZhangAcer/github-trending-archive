[
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "🚀🎬 ShortGPT - An experimental AI framework for automated short/video content creation. Enables creators to rapidly produce, manage, and deliver content using AI and automation.",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "A gradio web UI for running Large Language Models like LLaMA, llama.cpp, GPT-J, Pythia, OPT, and GALACTICA.",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "Running Llama 2 and other Open-Source LLMs on CPU Inference Locally for Document Q&A",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "Script to draw an image onto r/place (https://www.reddit.com/r/place/)",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "Chat with your documents on your local device using GPT models. No data leaves your device and 100% private.",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "bot for 2022 r/place",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "Examples and recipes for Llama 2 model",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "Play LLaMA2 (official / 中文版 / INT4 / llama2.cpp) Together! ONLY 3 STEPS! ( non GPU / 5GB vRAM / 8~14GB vRAM)",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "🤖 Deploy a private ChatGPT alternative hosted within your VPC. 🔮 Connect it to your organization's knowledge base and use it as a corporate oracle. Supports open-source LLMs like Llama 2, Falcon, and GPT4All.",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "Llama中文社区，最好的中文Llama大模型，完全开源可商用",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "Democratizing Deep-Learning for Drug Discovery, Quantum Chemistry, Materials Science and Biology",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "Inference code for LLaMA models",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "Repo for adapting Meta LlaMA2 in Chinese! META最新发布的LlaMA2的汉化版！ （完全开源可商用）",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "You like pytorch? You like micrograd? You love tinygrad! ❤️",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "low-cost, high-efficiency, easy-to-implement",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "リアルタイムボイスチェンジャー Realtime Voice Changer",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "AKShare is an elegant and simple financial data interface library for Python, built for human beings! 开源财经数据接口库",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "大麦网抢票脚本",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "An API wrapper for Discord written in Python.",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "崩坏：星穹铁道 模拟宇宙自动化 （Honkai Star Rail - Auto Simulated Universe）",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "All Algorithms implemented in Python",
    "lang": "Python"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "desc": "An implementation of Retentive Network: A Successor to Transformer for Large Language Models",
    "lang": "Python"
  }
]