[
  {
    "title": "hpcaitech/ColossalAI",
    "url": "https://github.com/hpcaitech/ColossalAI",
    "desc": "Colossal-AI: A Unified Deep Learning System for Big Model Era",
    "lang": "Python"
  },
  {
    "title": "testerSunshine/12306",
    "url": "https://github.com/testerSunshine/12306",
    "desc": "12306智能刷票，订票",
    "lang": "Python"
  },
  {
    "title": "Z4nzu/hackingtool",
    "url": "https://github.com/Z4nzu/hackingtool",
    "desc": "ALL IN ONE Hacking Tool For Hackers",
    "lang": "Python"
  },
  {
    "title": "karpathy/minGPT",
    "url": "https://github.com/karpathy/minGPT",
    "desc": "A minimal PyTorch re-implementation of the OpenAI GPT (Generative Pretrained Transformer) training",
    "lang": "Python"
  },
  {
    "title": "tobymao/sqlglot",
    "url": "https://github.com/tobymao/sqlglot",
    "desc": "Python SQL Parser and Transpiler",
    "lang": "Python"
  },
  {
    "title": "Lightning-AI/lightning",
    "url": "https://github.com/Lightning-AI/lightning",
    "desc": "Build and train PyTorch models and connect them to the ML lifecycle using Lightning App templates, without handling DIY infrastructure, cost management, scaling, and other headaches.",
    "lang": "Python"
  },
  {
    "title": "python-poetry/poetry",
    "url": "https://github.com/python-poetry/poetry",
    "desc": "Python packaging and dependency management made easy",
    "lang": "Python"
  },
  {
    "title": "triton-inference-server/server",
    "url": "https://github.com/triton-inference-server/server",
    "desc": "The Triton Inference Server provides an optimized cloud and edge inferencing solution.",
    "lang": "Python"
  },
  {
    "title": "open-mmlab/mmpose",
    "url": "https://github.com/open-mmlab/mmpose",
    "desc": "OpenMMLab Pose Estimation Toolbox and Benchmark.",
    "lang": "Python"
  },
  {
    "title": "ray-project/ray",
    "url": "https://github.com/ray-project/ray",
    "desc": "Ray is a unified framework for scaling AI and Python applications. Ray consists of a core distributed runtime and a toolkit of libraries (Ray AIR) for accelerating ML workloads.",
    "lang": "Python"
  },
  {
    "title": "slavingia/askmybook",
    "url": "https://github.com/slavingia/askmybook",
    "desc": "",
    "lang": "Python"
  },
  {
    "title": "wwong99/pentest-notes",
    "url": "https://github.com/wwong99/pentest-notes",
    "desc": "",
    "lang": "Python"
  },
  {
    "title": "facebookresearch/ConvNeXt-V2",
    "url": "https://github.com/facebookresearch/ConvNeXt-V2",
    "desc": "Code release for ConvNeXt V2 model",
    "lang": "Python"
  },
  {
    "title": "pymc-devs/pymc",
    "url": "https://github.com/pymc-devs/pymc",
    "desc": "Probabilistic Programming in Python: Bayesian Modeling and Probabilistic Machine Learning with PyTensor",
    "lang": "Python"
  },
  {
    "title": "NVIDIA/NeMo",
    "url": "https://github.com/NVIDIA/NeMo",
    "desc": "NeMo: a toolkit for conversational AI",
    "lang": "Python"
  },
  {
    "title": "home-assistant/intents",
    "url": "https://github.com/home-assistant/intents",
    "desc": "Intents to be used with Home Assistant",
    "lang": "Python"
  },
  {
    "title": "ThioJoe/Auto-Synced-Translated-Dubs",
    "url": "https://github.com/ThioJoe/Auto-Synced-Translated-Dubs",
    "desc": "Automatically translates the text of a video based on a subtitle file, and also uses AI voice to dub the video, and synced using the subtitle's timings",
    "lang": "Python"
  },
  {
    "title": "MaartenGr/BERTopic",
    "url": "https://github.com/MaartenGr/BERTopic",
    "desc": "Leveraging BERT and c-TF-IDF to create easily interpretable topics.",
    "lang": "Python"
  },
  {
    "title": "netbox-community/netbox",
    "url": "https://github.com/netbox-community/netbox",
    "desc": "The premiere source of truth powering network automation. Open source under Apache 2. Public demo: https://demo.netbox.dev",
    "lang": "Python"
  },
  {
    "title": "UKPLab/sentence-transformers",
    "url": "https://github.com/UKPLab/sentence-transformers",
    "desc": "Multilingual Sentence & Image Embeddings with BERT",
    "lang": "Python"
  },
  {
    "title": "elastic/detection-rules",
    "url": "https://github.com/elastic/detection-rules",
    "desc": "Rules for Elastic Security's detection engine",
    "lang": "Python"
  },
  {
    "title": "pre-commit/pre-commit-hooks",
    "url": "https://github.com/pre-commit/pre-commit-hooks",
    "desc": "Some out-of-the-box hooks for pre-commit",
    "lang": "Python"
  },
  {
    "title": "jupyter/docker-stacks",
    "url": "https://github.com/jupyter/docker-stacks",
    "desc": "Ready-to-run Docker images containing Jupyter applications",
    "lang": "Python"
  },
  {
    "title": "open-mmlab/OpenPCDet",
    "url": "https://github.com/open-mmlab/OpenPCDet",
    "desc": "OpenPCDet Toolbox for LiDAR-based 3D Object Detection.",
    "lang": "Python"
  },
  {
    "title": "Ebazhanov/linkedin-skill-assessments-quizzes",
    "url": "https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes",
    "desc": "Full reference of LinkedIn answers 2022 for skill assessments (aws-lambda, rest-api, javascript, react, git, html, jquery, mongodb, java, Go, python, machine-learning, power-point) linkedin excel test lösungen, linkedin machine learning test LinkedIn test questions and answers",
    "lang": "Python"
  }
]